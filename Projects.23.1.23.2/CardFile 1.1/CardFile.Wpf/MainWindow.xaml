<Window x:Class="CardFile.Wpf.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:CardFile.Wpf"
        xmlns:viewmodels="clr-namespace:CardFile.Wpf.ViewModels"
        mc:Ignorable="d"
        Title="{Binding WindowHeader}" Height="500" Width="1080" Initialized="Window_Initialized"
        Background="#2C3E50">
    <!-- Темно-сине-серый фон окна -->

    <Window.DataContext>
        <viewmodels:CardFileProductsViewModel />
    </Window.DataContext>

    <Window.Resources>
        <!-- Общий стиль для всех кнопок -->
        <Style TargetType="Button">
            <Setter Property="Background" Value="#3498DB"/>
            <!-- Мягкий синий цвет -->
            <Setter Property="Foreground" Value="White"/>
            <!-- Белый текст -->
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Padding" Value="10 5"/>
            <!-- Увеличенный горизонтальный отступ -->
            <Setter Property="Margin" Value="5"/>
            <Setter Property="BorderBrush" Value="#2980B9"/>
            <!-- Немного более темная синяя рамка -->
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="5">
                            <!-- Скругленные углы -->
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#2980B9"/>
                    <!-- Темнее синий при наведении -->
                    <Setter Property="Foreground" Value="#ECF0F1"/>
                    <!-- Светло-серый текст при наведении -->
                    <Setter Property="BorderBrush" Value="#3498DB"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="0.6"/>
                    <!-- Неактивные кнопки будут немного прозрачнее -->
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Общий стиль для DataGrid -->
        <Style TargetType="DataGrid">
            <Setter Property="Background" Value="#34495E"/>
            <!-- Темнее сине-серый фон для DataGrid -->
            <Setter Property="Foreground" Value="#ECF0F1"/>
            <!-- Светло-серый текст -->
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="GridLinesVisibility" Value="All"/>
            <!-- Отображение всех линий сетки -->
            <Setter Property="HeadersVisibility" Value="Column"/>
            <!-- Видны только заголовки столбцов -->
            <Setter Property="RowBackground" Value="#34495E"/>
            <!-- Фон строк по умолчанию -->
            <Setter Property="AlternatingRowBackground" Value="#3B5B78"/>
            <!-- Альтернативный фон строк -->
            <Setter Property="BorderBrush" Value="#2C3E50"/>
            <Setter Property="BorderThickness" Value="1"/>
        </Style>

        <!-- Стиль для заголовков столбцов DataGrid -->
        <Style TargetType="DataGridColumnHeader">
            <Setter Property="Background" Value="#1ABC9C"/>
            <!-- Бирюзовый фон заголовков -->
            <Setter Property="Foreground" Value="White"/>
            <!-- Белый текст заголовков -->
            <Setter Property="Padding" Value="8 5"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="FontWeight" Value="Bold"/>
        </Style>

        <!-- Стиль для строк DataGrid (для выделения) -->
        <Style TargetType="DataGridRow">
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="#2ECC71"/>
                    <!-- Изумрудно-зеленый для выделенной строки -->
                    <Setter Property="Foreground" Value="White"/>
                </Trigger>
            </Style.Triggers>
        </Style>

    </Window.Resources>
    <DockPanel>
        <!-- Меню сверху -->
        <Menu DockPanel.Dock="Top" Background="#34495E" Foreground="#ECF0F1">
            <!-- Темный фон меню -->
            <MenuItem Header="_Файл">
                <!-- Чтобы HeaderMenuItem тоже был светлым, можно использовать HeaderTemplate -->
                <MenuItem.HeaderTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding}" Foreground="#ECF0F1"/>
                    </DataTemplate>
                </MenuItem.HeaderTemplate>
                <MenuItem Header="_Открыть..." Click="OpenFile_Click" Background="#34495E" Foreground="#ECF0F1"/>
                <MenuItem Header="_Сохранить" Click="SaveFile_Click" Background="#34495E" Foreground="#ECF0F1"/>
                <MenuItem Header="_Сохранить как..." Click="SaveFileAs_Click" Background="#34495E" Foreground="#ECF0F1"/>
                <Separator />
                <MenuItem Header="В_ыход" Click="ExitMenuItem_Click" Background="#34495E" Foreground="#ECF0F1"/>
            </MenuItem>
        </Menu>

        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <!-- DataGrid для отображения данных -->
            <DataGrid Grid.Row="0" Margin="5" ItemsSource="{Binding Cards}" SelectedItem="{Binding SelectedCard}" AutoGenerateColumns="False"
                  IsReadOnly="True" CanUserAddRows="False" CanUserDeleteRows="False" CanUserSortColumns="False">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Название продукта" Binding="{Binding NameProducts }" />
                    <DataGridTextColumn Header="Тип продукта" Binding="{Binding TypeProducts }" />
                    <DataGridTextColumn Header="Срок-годности" Binding="{Binding Date_Shelf_Life}" />
                    <DataGridTextColumn Header="Количество продуктов" Binding="{Binding CountProducts}" />
                    <DataGridTextColumn Header="Цена одного продукта" Binding="{Binding PriceOneProducts}" />
                    <DataGridTextColumn Header="Затраты на продукты" Binding="{Binding PriseText}" />
                    <DataGridTextColumn Header="Место нахождения" Binding="{Binding Storage_Location}" />
                </DataGrid.Columns>
            </DataGrid>

            <!-- Панель с кнопками управления -->
            <StackPanel Orientation="Horizontal" Grid.Row="1" HorizontalAlignment="Right">
                <Button Content="Добавить" Click="AddButton_Click" />
                <Button Content="Изменить" IsEnabled="{Binding IsEditButtonEnabled}" Click="EditButton_Click" />
                <Button Content="Удалить" IsEnabled="{Binding IsEditButtonEnabled}" Click="DeleteButton_Click" />
            </StackPanel>
        </Grid>
    </DockPanel>
</Window>